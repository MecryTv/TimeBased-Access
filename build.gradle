plugins {
    id 'java'
    id 'eclipse'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.8'
    id("xyz.jpenilla.run-velocity") version "2.3.1"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'de.mecrytv'
version = '1.0.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
}

dependencies {
    compileOnly("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '6.3.0'
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '9.1.0'
}

tasks {
    runVelocity {
        velocityVersion("3.4.0-SNAPSHOT")
    }
}

tasks.named('shadowJar', com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar) {
    archiveBaseName.set('TimeBasedAccess')
    archiveClassifier.set('')
    archiveVersion.set('')
}

tasks.named('build') {
    dependsOn(tasks.shadowJar)
}

def targetJavaVersion = 22
java {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = [
            'version': project.version
    ]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })
project.eclipse.synchronizationTasks(generateTemplates)

tasks.processResources {
    filesMatching("**/*.conf") {
        expand(project.properties)
    }
}
